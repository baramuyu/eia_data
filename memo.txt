*related name
    >>> q = Scategory.objects.get(pk='ELEC.CONS_TOT.PC-IA-7.A')
    >>> q.metacategory_set.all()
    Traceback (most recent call last):
      File "<console>", line 1, in <module>
    AttributeError: 'Scategory' object has no attribute 'metacategory_set'
    >>> q.MetaCategory_set.all()
    Traceback (most recent call last):
      File "<console>", line 1, in <module>
    AttributeError: 'Scategory' object has no attribute 'MetaCategory_set'
    >>> q
    <Scategory: ELEC.CONS_TOT.PC-IA-7.A>
    >>> q.category1_id
    378
    >>> q.metacategory_set.all()
    Traceback (most recent call last):
      File "<console>", line 1, in <module>
    AttributeError: 'Scategory' object has no attribute 'metacategory_set'
    >>> q = Scategory.objects.get(pk='ELEC.CONS_TOT.PC-IA-7.A')
    >>> q.category1.name
    u'Root category'
    >>> q.category2.name
    u'Industrial cogen'

*geoset
http://api.eia.gov/geoset/?geoset_id=ELEC.CONS_TOT.NG-2.A&regions=USA-AL,USA-CA,USA-AR,USA-MI&api_key=67929F4F6AEAC2F250AE188343D01BA6


{% for item in cat1.list %}
<li>{{ item.category2 }}</li>
{% endfor %}


{{ thelist.0.propertyName }}


import urllib2
import urllib
import json
response = urllib2.urlopen("http://api.eia.gov/category/?api_key=67929F4F6AEAC2F250AE188343D01BA6&out=json&category_id=371")
bData = response.read()
sData = unicode(bData, 'utf-8-sig')
jData = json.loads(sData)


python manage.py shell --plain

from graphs.models import MetaCategory, Scategory
Scategory.objects.all()
Category.objects.all()

>>> q = Scategory.objects.values("category1_id","category2_id","category3_id").annotate(n=Count('series_id'))

>>> q = Scategory.objects.values_list("category1_id","category2_id","category3_id").annotate(n=Min('series_id'))

>>> q = Scategory.objects.values("category1__name","category2__name","category3__name").annotate(n=Min('series_id'))
from django.db.models import Min

from eia_graphs.models import Graph, Category
Graph.objects.all()
Category.objects.all()
q = Category(id=333,name="Electricity")
Category.objects.filter(pk=1)
q.graph_set.all()
q.graph_set.create(seriesid='TIEND')
q = Category.objects.get(pk=333)

*regex
>>> p = re.compile('[A-Z]*-[0-9A-Z]*\.[A|M|Q]')
>>> print p.search(series).group()
-AK-99.A
>>> re.sub(p, '', series)
u'ELEC.CONS_EG.COW'

---way1
>>> fileText = series
>>> fileText
u'ELEC.CONS_EG.COW-AK-99.A'
>>> p = re.compile("[A-Z]*-([0-9A-Z]*\.)[A|M|Q]")
>>> p.sub(r"\1", fileText)
u'ELEC.CONS_EG.COW-99.'
>>>

--way2
 >>> fileText = series
>>> fileText
u'ELEC.CONS_EG.COW-AK-99.A'
>>> fileText = re.sub("[A-Z]*-([0-9A-Z]*\.)[A|M|Q]", r"\1", fileText)
>>> fileText
u'ELEC.CONS_EG.COW-99.'

--plus 'A'
>>> p.sub(r"\1A", fileText)
u'ELEC.CONS_EG.COW-99.A'